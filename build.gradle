plugins {
    id 'java'
    id 'war'
    id "org.akhikhl.gretty" version "1.2.4"
    id "com.moowork.node" version "0.13"
}

group 'com.epam.memorina'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

node {
    // Version of node to use.
    version = '4.4.7'

    // Version of npm to use.
    npmVersion = '2.15.8'

    // Base URL for fetching node distributions.
    distBaseUrl = 'https://nodejs.org/dist'

    // If true, it will download node using above parameters.
    // If false, it will try to use globally installed node.
    download = true

    // Set the work directory for unpacking node
    workDir = file("${project.buildDir}/nodejs")

    // Set the work directory where node_modules should be located
    nodeModulesDir = file("${project.projectDir}src/main/resources/static")
}

repositories {
    mavenCentral()
    jcenter()
}

def pathToWebResource = "${project.projectDir}/src/main/webapp/static/"

task npmInstall(type: NpmTask, overwrite: true) {
    args = ['install', '--prefix', pathToWebResource]
}

task buildNpmWeb(dependsOn: 'npmInstall', type: NpmTask) {
    args = ['run', 'build', '--prefix', pathToWebResource]
}

task watch(type: NpmTask) {
    args = ['run', 'watch', '--prefix', pathToWebResource]
}

task createBuiltFolder << {
    new File(pathToWebResource + "built").mkdir()
}

npmInstall.dependsOn(createBuiltFolder)

build.dependsOn(buildNpmWeb)

dependencies {
    compile group: 'org.springframework', name: 'spring-context', version: '4.3.1.RELEASE'
    compile group: 'org.springframework', name: 'spring-webmvc', version: '4.3.1.RELEASE'
    compile group: 'javax.servlet', name: 'javax.servlet-api', version: '3.1.0'
    testCompile group: 'junit', name: 'junit', version: '4.12'
}


